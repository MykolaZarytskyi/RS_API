// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS_API.Data;

namespace RS_API.Data.Migrations
{
    [DbContext(typeof(RSDbContext))]
    partial class RSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RS_API.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Car_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Car");

                    b.HasDiscriminator<string>("Car_type").HasValue("Car");
                });

            modelBuilder.Entity("RS_API.Data.Entities.PassengerCar", b =>
                {
                    b.HasBaseType("RS_API.Data.Entities.Car");

                    b.Property<int>("PassengersCount")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("PassengerCar");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Mark = "BMW",
                            Model = "M2",
                            PassengersCount = 5
                        },
                        new
                        {
                            Id = 6,
                            Mark = "BMW",
                            Model = "X3M",
                            PassengersCount = 5
                        },
                        new
                        {
                            Id = 7,
                            Mark = "BMW",
                            Model = "Z4",
                            PassengersCount = 2
                        },
                        new
                        {
                            Id = 8,
                            Mark = "VOLVO",
                            Model = "S40",
                            PassengersCount = 5
                        });
                });

            modelBuilder.Entity("RS_API.Data.Entities.TruckCar", b =>
                {
                    b.HasBaseType("RS_API.Data.Entities.Car");

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("TruckCar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Mark = "MAN",
                            Model = "TGX EVOLION",
                            Capacity = 15.0
                        },
                        new
                        {
                            Id = 2,
                            Mark = "MAN",
                            Model = "MAN XLION",
                            Capacity = 18.0
                        },
                        new
                        {
                            Id = 3,
                            Mark = "DAF",
                            Model = "XF",
                            Capacity = 12.0
                        },
                        new
                        {
                            Id = 4,
                            Mark = "DAF",
                            Model = "CF",
                            Capacity = 14.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
